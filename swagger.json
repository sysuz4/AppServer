{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server of yixianquan",
    "version": "1.0.0",
    "title": "易闲圈",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "127.0.0.1:9999",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Operations about user"
    },
    {
      "name": "Mission",
      "description": "Everything about mission"
    },
    {
      "name": "Task",
      "description": "Everything about task"
    },
    {
      "name": "Token",
      "description": "everything about token"
    },
    {
      "name": "Image",
      "description": "about image"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create user",
        "operationId": "createUser",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "consumes": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "409": {
            "description": "conflict with other users"
          }
        }
      }
    },
    "/users/{userID}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by user id",
        "description": "",
        "operationId": "getUserByID",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "modify user by user id",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          },
          {
            "name": "oldPassword",
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "modify success"
          },
          "401": {
            "description": "password error"
          },
          "404": {
            "description": "user not exits"
          }
        }
      }
    },
    "/users/{userID}/missions": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "get all missions user published",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success get missions",
            "schema": {
              "$ref": "#/definitions/responseIDs"
            }
          },
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userID}/tasks": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "get all tasks user receieve",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          }
        ],
        "responses": {
          "200": {
            "description": "success get tasks",
            "schema": {
              "$ref": "#/definitions/responseIDs"
            }
          },
          "401": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userID}/reports": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "get all reports user report",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          }
        ],
        "responses": {
          "200": {
            "description": "success get reports",
            "schema": {
              "$ref": "#/definitions/responseIDs"
            }
          },
          "401": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/missions": {
      "get": {
        "tags": [
          "Mission"
        ],
        "summary": "get all missions",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "responses": {
          "200": {
            "description": "success get missions",
            "schema": {
              "$ref": "#/definitions/Missions"
            }
          }
        }
      }
    },
    "/missions/AllMissions": {
      "get": {
        "tags": [
          "Mission"
        ],
        "summary": "get all missions",
        "description": "",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "consumes": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          }
        ],
        "responses": {
          "200": {
            "description": "success get missions",
            "schema": {
              "$ref": "#/definitions/AllMissions"
            }
          }
        }
      }
    },
    "/missions/questionares": {
      "post": {
        "tags": [
          "Mission"
        ],
        "summary": "create questionare mission",
        "description": "",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "consumes": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MissionQue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success create",
            "schema": {
              "$ref": "#/definitions/Questionare"
            }
          },
          "400": {
            "description": "Invalid id/password supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/missions/errands": {
      "post": {
        "tags": [
          "Mission"
        ],
        "summary": "create errand mission",
        "description": "",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "consumes": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MissionErrand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success create",
            "schema": {
              "$ref": "#/definitions/Errand"
            }
          },
          "400": {
            "description": "Invalid id/password supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/missions/{missionID}": {
      "get": {
        "tags": [
          "Mission"
        ],
        "summary": "get mission by ID",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "missionID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success get mission",
            "schema": {
              "$ref": "#/definitions/Mission"
            }
          },
          "400": {
            "description": "Invalid id supplied"
          }
        }
      }
    },
    "/missions/{missionID}/tasks": {
      "get": {
        "tags": [
          "Mission"
        ],
        "summary": "get all tasks in this mission",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "missionID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          }
        ],
        "responses": {
          "200": {
            "description": "get tasks success",
            "schema": {
              "$ref": "#/definitions/responseIDs"
            }
          },
          "401": {
            "description": "Invalid username/password supplied"
          },
          "404": {
            "description": "mission not found"
          }
        }
      }
    },
    "/missions/{missionID}/QAsummary": {
      "get": {
        "tags": [
          "Mission"
        ],
        "summary": "summary of questionares",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "missionID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          }
        ],
        "responses": {
          "200": {
            "description": "get tasks success",
            "schema": {
              "$ref": "#/definitions/MissionQAsummary"
            }
          },
          "403": {
            "description": "questionare and missionId are not matched"
          },
          "404": {
            "description": "mission not found"
          }
        }
      }
    },
    "/missions/{missionID}/accept": {
      "get": {
        "tags": [
          "Mission"
        ],
        "summary": "check the state of the mission by missionId",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "missionID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          }
        ],
        "responses": {
          "200": {
            "description": "accept successfully"
          },
          "400": {
            "description": "mission overdue or compelte"
          },
          "404": {
            "description": "mission not found"
          }
        }
      }
    },
    "/missions/{missionID}/reports": {
      "get": {
        "tags": [
          "Mission"
        ],
        "summary": "get all report in this mission",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "missionID",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "get reports success",
            "schema": {
              "$ref": "#/definitions/responseIDs"
            }
          },
          "404": {
            "description": "mission not found"
          }
        }
      }
    },
    "/tasks/{taskID}/QAsubmit": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "submit the questionare",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QAsummary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Submit QA successfully"
          },
          "400": {
            "description": "not your acc questionare <br> you have submited this questionare <br> question No.x not found <br> the number of questions and questionares are not matched <br> some of your questions are not belong to task No.x <br> answer of question No.x should be only 1 <br> answer of question No.x is not enough <br> answer of question No.x is null"
          },
          "404": {
            "description": "task not found"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/tasks/{taskID}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "get task by ID",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          }
        ],
        "responses": {
          "200": {
            "description": "get reports success",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "401": {
            "description": "Invalid username/password supplied"
          },
          "404": {
            "description": "task not found"
          }
        }
      }
    },
    "/tasks/{taskID}/questionares": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "get questionare by taskID",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          }
        ],
        "responses": {
          "200": {
            "description": "get reports success",
            "schema": {
              "$ref": "#/definitions/Questionare"
            }
          },
          "401": {
            "description": "Invalid username/password supplied"
          },
          "404": {
            "description": "task not found"
          }
        }
      }
    },
    "/tasks/{taskID}/finishErrand": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "check errand finished",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          }
        ],
        "responses": {
          "200": {
            "description": "errand task finished"
          },
          "400": {
            "description": "errand task not be accepted"
          },
          "404": {
            "description": "task not found"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/tasks/{taskID}/errands": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "get errrand by taskID",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          }
        ],
        "responses": {
          "200": {
            "description": "get reports success",
            "schema": {
              "$ref": "#/definitions/Errand"
            }
          },
          "401": {
            "description": "Invalid username/password supplied"
          },
          "404": {
            "description": "task not found"
          }
        }
      }
    },
    "/tokens": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "login and get a token",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "login success",
            "schema": {
              "$ref": "#/definitions/ReToken"
            }
          },
          "401": {
            "description": "Invalid username/password supplied"
          }
        }
      },
      "delete": {
        "tags": [
          "Token"
        ],
        "summary": "logout",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          }
        ],
        "responses": {
          "200": {
            "description": "logout success"
          },
          "401": {
            "description": "authorized fail"
          }
        }
      }
    },
    "/images": {
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "upload image",
        "produces": [
          "application/json;chartset=uft-8"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "token"
          },
          {
            "name": "file",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Image"
            },
            "description": "image file less than 10M"
          }
        ],
        "responses": {
          "201": {
            "description": "upload success"
          },
          "400": {
            "description": "upload fail"
          }
        }
      }
    },
    "/images/{image_name}": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "get image",
        "produces": [
          "image"
        ],
        "parameters": [
          {
            "name": "image_name",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "name"
          }
        ],
        "responses": {
          "200": {
            "description": "get success"
          },
          "404": {
            "description": "image not exist"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "userType": {
          "type": "integer",
          "format": "int64"
        },
        "stuId": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "avator": {
          "type": "string"
        },
        "nickName": {
          "type": "string"
        },
        "age": {
          "type": "integer",
          "format": "int64"
        },
        "sex": {
          "type": "integer"
        },
        "grade": {
          "type": "integer"
        },
        "major": {
          "type": "string"
        },
        "mailAddr": {
          "type": "string"
        },
        "phoneNum": {
          "type": "string"
        },
        "creditVal": {
          "type": "integer"
        },
        "balance": {
          "type": "integer"
        },
        "tags": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Mission": {
      "type": "object",
      "properties": {
        "missionId": {
          "type": "integer"
        },
        "missionStatus": {
          "type": "integer"
        },
        "taskNum": {
          "type": "integer"
        },
        "publishTime": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "deadLine": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "money": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        }
      }
    },
    "Missions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Mission"
      }
    },
    "AllMissions": {
      "type": "object",
      "properties": {
        "MissionNum": {
          "type": "integer"
        },
        "AllMissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Mission_All"
          }
        }
      }
    },
    "Mission_All": {
      "type": "object",
      "properties": {
        "missionId": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "publishTime": {
          "type": "string"
        },
        "deadLine": {
          "type": "string"
        },
        "taskType": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "avator": {
          "type": "string"
        },
        "myAccept": {
          "type": "boolean"
        },
        "myPub": {
          "type": "boolean"
        },
        "aveMoney": {
          "type": "number"
        }
      }
    },
    "MissionQue": {
      "type": "object",
      "properties": {
        "mission": {
          "$ref": "#/definitions/Mission"
        },
        "task": {
          "$ref": "#/definitions/Task"
        },
        "questionare": {
          "$ref": "#/definitions/Questionare"
        }
      }
    },
    "MissionErrand": {
      "type": "object",
      "properties": {
        "mission": {
          "$ref": "#/definitions/Mission"
        },
        "task": {
          "$ref": "#/definitions/Task"
        },
        "errand": {
          "$ref": "#/definitions/Errand"
        }
      }
    },
    "MissionQAsummary": {
      "type": "object",
      "properties": {
        "missionId": {
          "type": "integer"
        },
        "taskNum": {
          "type": "integer"
        },
        "finishNum": {
          "type": "integer"
        },
        "QATitle": {
          "type": "string"
        },
        "QADes": {
          "type": "string"
        },
        "questions": {
          "$ref": "#/definitions/Question"
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "integer"
        },
        "MissionId": {
          "type": "integer"
        },
        "pubUserId": {
          "type": "integer"
        },
        "accUserId": {
          "type": "integer"
        },
        "taskStatus": {
          "type": "integer"
        },
        "finishTime": {
          "type": "string"
        },
        "taskType": {
          "type": "integer"
        }
      }
    },
    "Errand": {
      "type": "object",
      "properties": {
        "errandId": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "taskId": {
          "type": "integer"
        },
        "privateInfo": {
          "type": "string"
        },
        "pic": {
          "type": "string"
        }
      }
    },
    "QAsummary": {
      "type": "object",
      "properties": {
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QA"
          }
        }
      }
    },
    "QA": {
      "type": "object",
      "properties": {
        "questionId": {
          "type": "integer"
        },
        "answer": {
          "type": "string"
        }
      }
    },
    "Questionare": {
      "type": "object",
      "properties": {
        "questionareId": {
          "type": "integer"
        },
        "questionNum": {
          "type": "integer"
        },
        "taskId": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Question"
          }
        }
      }
    },
    "Question": {
      "type": "object",
      "properties": {
        "questionId": {
          "type": "integer"
        },
        "questionType": {
          "type": "integer"
        },
        "question": {
          "type": "string"
        },
        "answer": {
          "type": "string"
        },
        "choiceNum": {
          "type": "integer"
        },
        "choiceStr": {
          "type": "string"
        },
        "questionareId": {
          "type": "integer"
        }
      }
    },
    "responseIDs": {
      "type": "array",
      "items": {
        "type": "integer"
      }
    },
    "ReToken": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "Image": {
      "type": "object"
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}